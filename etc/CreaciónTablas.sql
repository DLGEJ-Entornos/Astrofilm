CREATE TABLE dbo.USUARIOS (
IDUsuario INT PRIMARY KEY IDENTITY (1, 1),
Apellidos NVARCHAR (50) NOT NULL,
Nombre NVARCHAR (20) NOT NULL,
FecNac DATE NOT NULL,
TipoUser BIT NOT NULL,
Email NVARCHAR (50) NOT NULL,
Premium BIT NOT NULL
);
go
CREATE TABLE dbo.PELICULAS (
IDPelicula INT PRIMARY KEY IDENTITY (1, 1),
Titulo NVARCHAR (50) NOT NULL UNIQUE,
Año DATE NOT NULL,
PuntMedia DECIMAL(2,1) NOT NULL,
Email NVARCHAR (50) NOT NULL,
Premium BIT NOT NULL
);
go
CREATE TABLE dbo.TRABAJADORES (
IDTrabajador INT PRIMARY KEY IDENTITY (1, 1),
Tipo INT NOT NULL,
Apellido NVARCHAR (50) NOT NULL,
Nombre NVARCHAR (20) NOT NULL,
FecNac DATE NOT NULL,
Pais NVARCHAR (50) NOT NULL
);
go
CREATE TABLE dbo.GENEROS (
IDGenero INT PRIMARY KEY IDENTITY (1, 1),
Nombre NVARCHAR (50) NOT NULL UNIQUE,
FecNac DATE NOT NULL,
Pais NVARCHAR (50) NOT NULL
);
go
CREATE TABLE dbo.SALAS (
IDSala INT PRIMARY KEY IDENTITY (1, 1),
Aforo INT NOT NULL,
Ciudad NVARCHAR (30) NOT NULL
);
go
CREATE TABLE dbo.LISTAS (
IDLista INT PRIMARY KEY IDENTITY (1, 1),
Titulo NVARCHAR (20) NOT NULL,
Publica BIT NOT NULL,
NElementos INT NULL,
PropietarioFK INT NOT NULL UNIQUE,
CONSTRAINT ListaPropietarioFK FOREIGN KEY (PropietarioFK)
REFERENCES USUARIOS(IDUsuario),
);
go
CREATE TABLE dbo.CRITICAS (
IDCritica INT PRIMARY KEY IDENTITY (1, 1),
Texto NVARCHAR (3000) NOT NULL,
IDUserFK INT NOT NULL UNIQUE,
IDPeliFK INT NOT NULL UNIQUE,
CONSTRAINT CriticaUserFK FOREIGN KEY (IDUserFK)
REFERENCES USUARIOS(IDUsuario),
CONSTRAINT CriticaPeliFK FOREIGN KEY (IDPeliFK)
REFERENCES PELICULAS(IDPelicula)
);
go
CREATE TABLE dbo.FUNCION (
IDFuncion INT PRIMARY KEY IDENTITY (1, 1),
Fecha DATETIME NOT NULL,
Disponibles INT NULL,
PrecioBruto DECIMAL(3,2) NOT NULL,
IDPeliFK INT NOT NULL UNIQUE,
IDSalaFK INT NOT NULL UNIQUE,
CONSTRAINT FuncionSalaFK FOREIGN KEY (IDSalaFK)
REFERENCES SALAS(IDSala),
CONSTRAINT FuncionPeliFK FOREIGN KEY (IDPeliFK)
REFERENCES PELICULAS(IDPelicula)
);
go
CREATE TABLE dbo.RESERVA (
IDReserva INT PRIMARY KEY IDENTITY (1, 1),
FecReserva DATETIME NOT NULL,
NumButaca INT NOT NULL,
IDUserFK INT NOT NULL UNIQUE,
IDFuncionFK INT NOT NULL UNIQUE,
PrecioNeto DECIMAL(3,2) NOT NULL, --Precio tras Descuento (premium?)
CONSTRAINT FuncionSalaFK FOREIGN KEY (IDSalaFK)
REFERENCES SALAS(IDSala),
CONSTRAINT FuncionPeliFK FOREIGN KEY (IDPeliFK)
REFERENCES PELICULAS(IDPelicula)
);
go
--PARA FUNCION DATATIME
